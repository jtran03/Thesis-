<launch>

  <!-- Start gazebo -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="paused" value="false" />
    <arg name="use_sim_time" value="true" />
    <arg name="gui" value="true" />
    <arg name="headless" value="false" />
    <arg name="debug" value="false" />
  </include>

  <!-- Spawn the robot-->
  <param name="robot_description" command="$(find xacro)/xacro $(find shellCommander)/models/turtlebot3_burger_camera/turtlebot3_burger.urdf.xacro" />
  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model turtlebot3 -x 0 -y 0 -z 0 -param robot_description" />

  <!-- Spawn the actual maze -->
  <node name="enclosed_maze_spawn_urdf" pkg="gazebo_ros" type="spawn_model" respawn="false" args="-file $(find shellCommander)/models/open_maze/model.sdf -sdf -x -1.05 -y 4.75 -z 0 -model maze" />


  <!-- Maze solver -->
  <node name="maze_solver" pkg="shellCommander" type="maze_solver_oop" output="screen" />

  <!-- Gmapping -->
  <arg name="ns" default="tb3_0" />
  <node pkg="gmapping" type="slam_gmapping" name="turtlebot3_slam_gmapping" ns="$(arg ns)">
    <param name="base_frame" value="$(arg ns)/base_footprint" />
    <param name="odom_frame" value="$(arg ns)/odom" />
    <param name="map_frame" value="$(arg ns)/map" />
    <param name="map_update_interval" value="2.0" />
    <param name="maxUrange" value="4.0" />
    <param name="minimumScore" value="100" />
    <param name="linearUpdate" value="0.2" />
    <param name="angularUpdate" value="0.2" />
    <param name="temporalUpdate" value="0.5" />
    <param name="delta" value="0.05" />
    <param name="lskip" value="0" />
    <param name="particles" value="120" />
    <param name="sigma" value="0.05" />
    <param name="kernelSize" value="1" />
    <param name="lstep" value="0.05" />
    <param name="astep" value="0.05" />
    <param name="iterations" value="5" />
    <param name="lsigma" value="0.075" />
    <param name="ogain" value="3.0" />
    <param name="srr" value="0.01" />
    <param name="srt" value="0.02" />
    <param name="str" value="0.01" />
    <param name="stt" value="0.02" />
    <param name="resampleThreshold" value="0.5" />
    <param name="xmin" value="-10.0" />
    <param name="ymin" value="-10.0" />
    <param name="xmax" value="10.0" />
    <param name="ymax" value="10.0" />
    <param name="llsamplerange" value="0.01" />
    <param name="llsamplestep" value="0.01" />
    <param name="lasamplerange" value="0.005" />
    <param name="lasamplestep" value="0.005" />
  </node>

  <!-- Arguments -->
  <arg name="slam_methods" default="gmapping" doc="slam type [gmapping, cartographer, hector, karto, frontier_exploration]" />
  <arg name="configuration_basename" default="turtlebot3_lds_2d.lua" />
  <arg name="open_rviz" default="true" />

  <!-- TF Publisher for RVIZ -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="50.0" />
  </node>

  <!-- SLAM: Gmapping, Cartographer, Hector, Karto, Frontier_exploration, RTAB-Map -->
  <include file="$(find turtlebot3_slam)/launch/turtlebot3_$(arg slam_methods).launch">
    <arg name="model" value="burger" />
    <arg name="configuration_basename" value="$(arg configuration_basename)" />
  </include>

  <!-- rviz -->
  <group if="$(arg open_rviz)">
    <node pkg="rviz" type="rviz" name="rviz" required="true" args="-d $(find shellCommander)/launch/trajectory.rviz" />
  </group>

  <node name="trajectory_server" pkg="hector_trajectory_server" type="hector_trajectory_server" required="true" />

</launch>